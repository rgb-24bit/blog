#+TITLE:      Emacs Org 搭建 GTD 系统
#+AUTHOR:     rgb-24bit
#+EMAIL:      rgb-24bit@foxmail.com
#+DATE:       <2017-12-27 周三>

* 目录                                                    :TOC_4_gh:noexport:
- [[#前言][前言]]
- [[#gtd系统][GTD系统]]
  - [[#核心原则][核心原则]]
    - [[#收集][收集]]
    - [[#处理][处理]]
    - [[#管理][管理]]
    - [[#执行][执行]]
    - [[#回顾][回顾]]
- [[#系统构建][系统构建]]
  - [[#文件划分][文件划分]]
  - [[#标签设计][标签设计]]
    - [[#情景标签][情景标签]]
    - [[#分类标签][分类标签]]
  - [[#任务设置][任务设置]]
    - [[#任务优先级][任务优先级]]
    - [[#任务状态][任务状态]]
- [[#系统使用][系统使用]]
  - [[#单个任务][单个任务]]
  - [[#org-agenda][Org-Agenda]]
- [[#相关链接][相关链接]]

* 前言
  前段时间，受到繁杂的任务的折磨，我不得不寻找一个办法来减轻我在这方面的压力。

  这时，我想起了之前在一些博客上看到的用 *emacs* 的 *org-mode* 来进行 *GTD* 管理的文章。
  这让我受到了不少的启发，因此综合了几个博客的内容，搭建了自己的 *GTD系统* 。

* GTD系统
  既然谈到了 *GTD系统*, 那么便不得不先了解一下 *GTD系统* 是个什么东西。

  *GTD* 是一种行为管理的方法, 主要原则在于一个人需要通过记录的方式把头脑中的各种任务移出来。
  通过这样的方式，头脑可以不用塞满各种需要完成的事情，而集中精力在正在完成的事情。

  这样一来，你便不需要在繁杂的任务中寻找出目前需要做的那一个，而是直接根据记录做就可以了。

** 核心原则
   GTD系统由五条核心原则组成，分别是:

*** 收集
    把任何你需要 *跟踪* 或者 *记住* 或者 *做* 的事情记在一个地方,
    这个地方可以是任何你可以 *方便进行记录保存* 的地方，包括但不限于: 电子邮箱, 笔记本, 云笔记。
    这个收集每个星期都应该至少清理一次。

*** 处理
    处理你的收集箱, 并遵循一个严格的工作流程:
    - 从最上面开始
    - 一次处理一项
    - 不把任何东西放回收件箱
    - 如果任何一项需要做:
      + 做, *如果花的时间少于两分钟*, 这也被称为 *两分钟原则*
      + 自己或委托他人将它完成
      + 延期
    - 否则
      + 把它存档以便查询
      + 把它扔掉
      + 使它成熟以便下一步的处理

*** 管理
    通过一个列表集合来跟踪需要关注的项目
          - ~Todo~: 要去做的或正在做的
          - ~Next~: 下一步要做的任务
          - ~Project~: 每个需要多于一个实际的行动才能完成的任务
          - ~Wait~: 需要等待前置条件达成的任务
          - ~Someday/Maybe~: 这些事情你需要在某个点去做，但是不是马上

            同时, 你应该有一个归档系统, 用于保存相关信息。

*** 执行
    去做你计划好的事情, 不要随意延期，放弃 ！

*** 回顾
    至少以星期为周期，GTD 要求你回顾所有你比较主要的 “行动”， “项目” 和 “等待” 的事项，
    确保所有的新任务或者即将到来的事件都进入你的系统， 而且所有的事情都更新到符合最新的情况。

* 系统构建
  这一点是重要的, 虽然我们知道的 *GTD系统* 的核心原则, 并且看起来似乎很简单。

  但是，一个完整的 *GTD系统* 的构建需要一个适合的 *工具*, 这个工具的定义没有统一的标准，
  不过你需要保证这个工具是你 *大部分时间都可以接触的到的* ， 这样你才能保证随时查看你的
  *GTD系统* 来获取你需要完成的事情。

  而我每天大部分时间都坐在电脑面前， 所以我选择了 *emacs* 编辑器的 *org-mode* 来帮助我来构建自己的 *GTD* 系统.
  因为, 这个模式真的很强大 !

  好了，废话不多说，直接开始 *GTD系统* 的构建了。
  
** 文件划分
   在开始之前，你需要注意，如果你没有用过 *emacs* 或 没有用过 *org-mode*, 建议你先去看一下 *org-mode* 的
   基本使用在来研究接下来的内容。这方面的教程网上内容很多，我就不多说了！

   我的文件目录结构:
   #+BEGIN_EXAMPLE
     GTD/
     |-- Log/              -- 日志文件夹
     |   |--2017/          -- 2017 日志文件夹
     |      |-- dec.org    -- 12月日志文件
     |-- inbox.org         -- 收集箱
     |-- task.org          -- 任务文件
     |-- plan.org          -- 计划文件, 用于做计划
     |-- project.org       -- 项目文件
     |-- routine.org       -- 日常任务文件
   #+END_EXAMPLE

** 标签设计
   我们知道, *org-mode* 允许为每一个任务添加标签, 所以设计一个好的标签系统也能为
   你浏览 *GTD系统* 的时候提供帮助信息.

*** 情景标签
    用于表名该任务在何种环境下完成

    + ~@Workplace~ -- 工作场所
    + ~@Home~ -- 在家
    + ~@Computer~ -- 有电脑的时候
    + ~@Call~ -- 打电话的时候
    + ~@Way~ -- 在路上或外出
    + ~@Lunchtime~ -- 午休时间

*** 分类标签
    根据任务的类型设置的标签

    + ~@Urgent~ -- 紧急
    + ~@Import~ -- 重要

** 任务设置
*** 任务优先级
    这个可以根据 ~S-Up/Down~ 快捷键来设置, 默认三个等级 ~[#A]~, ~[#B]~, ~[#C]~

*** 任务状态
    这个可以在你的 .emacs.d 里进行配置, 这是我的配置:

    #+BEGIN_SRC emacs-lisp
      ;; (a@/!): a 是快捷键, @ 表示切换到这个状态时会提示输出, ! 表示会记录切换到这个状态的时间戳, -state 的来源
      (setq org-todo-keywords
            '((sequence "TODO(t!)" "NEXT(n)" "WAITTING(w)" "SOMEDAY(s)" "MAYBE(m)" "|" "DONE(d@/!)" "ABORT(a@/!)")))
      )
    #+END_SRC

    含义:
    + ~TODO~ -- 目前要做的任务
    + ~NEXT~ -- 接下来要做的任务
    + ~WAITTING~ -- 具有前置条件的任务, 需要等待前置条件达成
    + ~SOMEDAY~ -- 将来要做的任务
    + ~MAYBE~ -- 可能要做的任务
    + ~DONE~ -- 完成的任务
    + ~ABORT~ -- 取消的任务

* 系统使用
** 单个任务
   [[file:img/GTD.png]]

   这张图片是一个 ~Project~ 的例子， 根据这个例子来说明单个任务的相关问题。

   * ~#+STARTUP:~ :: 打开 ~org~ 文件时的相关选项。

     - ~showall~ -- 显示所有内容， 不折叠

     - ~hidestars~ -- 隐藏 ~*~

   * ~#+TAGS~ :: 这个 ~org~ 文件的预设标签， 可以在任务标题上通过快捷键 ~C-c C-c~ 来设置标签。
                 
                 ~@Workplace(w)~ 中， ~@Workplace~ 是标签名， ~(w)~ 是快捷键。

                 修改 ~#+TAGS~ 后， 可以在该行用快捷键 ~C-c C-c~ 更新预设标签。

                 ~#+FILETAGS~ 可以设置整个文件所有标题共有的标签。

                 *注:* 低级标题会继承高级标题的标签。

   * ~TODO~ :: 任务状态， 可以使用快捷键 ~C-c C-t~ 修改。
               
               自定义任务状态：
               #+BEGIN_SRC elisp
                 ;; ===========================================================================
                 ;; org-mode gtd state settings
                 ;; @ /! Switch to this state will be prompted to enter
                 ;; ===========================================================================

                 (setq org-todo-keywords
                       '((sequence "TODO(t!)" "NEXT(n)" "WAITTING(w)" "SOMEDAY(s)" "MAYBE(m)" "|" "DONE(d@/!)" "ABORT(a@/!)")))

               #+END_SRC

   * ~[#B]~ :: 任务优先级， 通过快捷键 ~Shift-Up/Down~ 调整。

   * ~SCHEDULED~ :: 任务开始时间， 插入快捷键 ~C-c C-s~

   * ~DEADLINE~ :: 任务截止时间， 插入快捷键 ~C-c C-d~

   * ~:PROPERTIES:~ :: 任务属性， 完整格式为：
                       #+BEGIN_EXAMPLE
                         :PROPERTIES:
                         :属性A: 描述或值
                         :属性B: ...
                         :END:
                       #+END_EXAMPLE

   * ~:LOGBOOK:~ :: 任务计时， 自动生成。 开始计时快捷键： ~C-c C-x C-i~. 结束计时快捷键： ~C-c C-x C-o~.
** Org-Agenda
   几个快捷键：
   - ~C-c a a~: 周任务视图
     - ~d/w/y~: 天/周/年 视图切换
     - ~i/o~: 开始/结束 计时
     - ~t~: 修改任务状态
     - ~Shift-Up/Down~: 修改任务优先级
     - ~C-v~: 更多显示选择
   - ~C-c a t~: 任务列表
   - ~C-c a m~: 根据标签筛选任务
   - ~C-c [~: 将当前文件添加到 ~Org-Agenda~
   - ~C-c ]~: 将当前文件从 ~Org-Agenda~ 删除

* 相关链接
  + 维基百科
    - [[https://zh.wikipedia.org/wiki/%E5%B0%BD%E7%AE%A1%E5%8E%BB%E5%81%9A][尽管去做]]
  + 个人博客
    - [[http://www.cnblogs.com/qlwy/archive/2012/06/15/2551034.html][神器中的神器org-mode之入门篇]]
    - [[http://blog.csdn.net/u014801157/article/details/24372485][Emacs月月积累（终结篇）：熟练使用org-mode管理日常事务]]
    - [[http://www.cnblogs.com/holbrook/archive/2012/04/17/2454619.html][用Org-mode实现GTD]]
    - [[http://blog.csdn.net/dc_726/article/details/8623879][用Org-mode实践《奇特的一生》]]
  + 官方网页
    - [[http://orgmode.org/][Org mode for Emacs – Your Life in Plain Text]]
